[package]
name = "volo-grpc"
version = "0.9.0"
edition.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
authors.workspace = true
description = "gRPC framework implementation of volo."
documentation = "https://docs.rs/volo-grpc"
readme = "README.md"
categories = ["asynchronous", "network-programming", "web-programming"]
keywords = ["async", "rpc", "grpc", "protobuf"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"] # for conditional intra-doc links

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
pilota.workspace = true
volo = { version = "0.9", path = "../volo" }
motore = { workspace = true, features = ["tower"] }
metainfo.workspace = true

anyhow.workspace = true
async-stream.workspace = true
base64.workspace = true
bytes.workspace = true
fxhash.workspace = true
futures-util.workspace = true
futures.workspace = true
flate2.workspace = true
h2.workspace = true
hex.workspace = true
http-body.workspace = true
http.workspace = true
hyper = { workspace = true, features = ["full"] }
hyper-timeout.workspace = true
matchit.workspace = true
percent-encoding.workspace = true
pin-project.workspace = true
tokio = { workspace = true, features = ["time", "rt", "net", "sync", "signal"] }
tokio-stream.workspace = true
tokio-util = { workspace = true, features = ["codec", "compat"] }
tower = { workspace = true, features = [
    "buffer",
    "limit",
    "make",
    "util",
    "discover",
    "balance",
] }
tracing.workspace = true

tokio-rustls = { workspace = true, optional = true }
tokio-native-tls = { workspace = true, optional = true }

[dev-dependencies]
tracing-subscriber.workspace = true

[features]
default = []

rustls = ["tokio-rustls"]
native-tls = ["tokio-native-tls"]
