[package]
name = "volo-http"
version = "0.1.9"
edition.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
authors.workspace = true
description = "HTTP framework implementation of volo."
documentation = "https://docs.rs/volo-http"
readme = "README.md"
categories = ["asynchronous", "network-programming", "web-programming"]
keywords = ["async", "rpc", "http"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
volo = { version = "0.9", path = "../volo" }

http-body-util = "0.1"
hyper = { version = "1", features = ["server", "http1", "http2"] }
hyper-util = { version = "0.1", features = ["tokio"] }

bytes.workspace = true
cookie = { workspace = true, optional = true, features = ["percent-encode"] }
faststr.workspace = true
futures.workspace = true
futures-util.workspace = true
matchit.workspace = true
mime.workspace = true
motore.workspace = true
parking_lot.workspace = true
pin-project.workspace = true
serde.workspace = true
serde_html_form.workspace = true
serde_json = { workspace = true, optional = true }
serde_urlencoded.workspace = true
simdutf8.workspace = true
sonic-rs = { workspace = true, optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = [
    "time",
    "macros",
    "rt",
    "signal",
    "parking_lot",
] }
tracing.workspace = true
url.workspace = true

[dev-dependencies]
serde = { version = "1", features = ["derive"] }

[features]
default = ["sonic_json"]

full = ["cookie", "sonic_json"]

cookie = ["dep:cookie"]
sonic_json = ["dep:sonic-rs"]
serde_json = ["dep:serde_json"]
