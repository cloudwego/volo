use std::{{net::SocketAddr, time::Duration}};

use volo_http::{{layer::TimeoutLayer, route::Router, server::Server, Address, StatusCode}};
use {name}::example_router;

async fn timeout_handler() -> (StatusCode, &'static str) {{
    (StatusCode::INTERNAL_SERVER_ERROR, "Timeout!\n")
}}

#[volo::main]
async fn main() {{
    let app = Router::new()
        .merge(example_router())
        .layer(TimeoutLayer::new(Duration::from_secs(1), timeout_handler));

    let addr = "[::]:8080".parse::<SocketAddr>().unwrap();
    let addr = Address::from(addr);

    println!("Listening on {{addr}}");

    Server::new(app).run(addr).await.unwrap();
}}
