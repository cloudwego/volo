name: CI
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - test-macos
      - test-windows
      - lint
    steps:
      - run: exit 0

  test-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust:
          # We currently only support nightly, but will support stable and beta after GAT is stablizied.
          # - stable
          # - beta
          - nightly
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Run tests
      run: |
        rustup default ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        cargo check --target ${{ matrix.target }}
        cargo test --target ${{ matrix.target }}

  test-macos:
    runs-on: macos-latest

    strategy:
      matrix:
        rust:
          # We currently only support nightly, but will support stable and beta after GAT is stablizied.
          # - stable
          # - beta
          - nightly
        target:
          - x86_64-apple-darwin

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Run tests
      run: |
        rustup default ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        cargo check --target ${{ matrix.target }}
        cargo test --target ${{ matrix.target }}

  test-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        rust:
          # We currently only support nightly, but will support stable and beta after GAT is stablizied.
          # - stable
          # - beta
          - nightly
        target:
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Run tests
      run: |
        rustup default ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        cargo check --target ${{ matrix.target }}
        cargo test --target ${{ matrix.target }}

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust:
          # We currently only support nightly, but will support stable and beta after GAT is stablizied.
          # - stable
          # - beta
          - nightly

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Lint
      run: |
        rustup default ${{ matrix.rust }}
        rustup component add rustfmt
        rustup component add clippy
        cargo fmt -- --check
        cargo clippy
